name: Decide-Lorca application

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'doc/**'

jobs:
  build:
    strategy:
      matrix:
        pyversion: ['3.10']

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14.9
        env:
          POSTGRES_USER: decide
          POSTGRES_PASSWORD: decide
          POSTGRES_DB: decide
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{matrix.pyversion}}
      uses: actions/setup-python@v4
      with:
        python-version: ${{matrix.pyversion}}
    - name: psycopg2 prerequisites
      run: sudo apt-get install libpq-dev
    - name: Install dependencies and config
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        cp decide/local_settings.gactions.py decide/local_settings.py
    - name: Run tests
      id: test
      run: |
        cd decide
        coverage run --branch --source=. ./manage.py test booth -v 2 --keepdb 
        echo "::set-output name=tests_failed::$(echo $?)"

    - name: Create Issue on Test Failure
      if: steps.test.outputs.tests_failed != '0'
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const issueTitle = 'Failure in CI - Module Name';
          const issueBody = 'Se han encontrado errores en la ejecución de tests. ¡Por favor, verifica y soluciona el problema!';
          const octokit = github.getOctokit(process.env.GITHUB_TOKEN);
          const newIssue = await octokit.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: issueTitle,
            body: issueBody
          });
          console.log(`Se ha creado un nuevo issue: ${newIssue.data.html_url}`);
